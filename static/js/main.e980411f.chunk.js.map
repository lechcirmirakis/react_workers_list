{"version":3,"sources":["components/Container/container.js","static/team.js","components/Members/Mail.js","components/Members/Member.js","components/Members/Members.js","components/Slider/slide.js","components/Slider/Slider.js","App.js","serviceWorker.js","index.js"],"names":["container","props","className","children","id","name","position","location","avatar","email","mail","href","src","alt","member","onClick","click","Mail","Members","membersList","map","Member","key","sliderToggle","slide","styles","fadeIn","animation","animationName","Radium","keyframes","MembersSlider","settings","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","slideInitial","arrows","changeSlide","element","document","querySelector","style","OurTeam","state","isSlider","sliderHandler","sliderStatus","setState","mainView","this","Slider","Component","Boolean","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e980411f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst container = (props) => <div className=\"container\">{props.children}</div>\r\n\r\nexport default container;","export default ([\r\n    { id: 1, name: 'Basia Sołtysińska', position: 'founder', location: 'Warsaw', avatar: 'images/avatars/av01.png', email: 'basia@team.com' },\r\n    { id: 2, name: 'Włas Chorowiec', position: 'founder', location: 'Warsaw', avatar: 'images/avatars/av02.png', email: 'wlas@team.com' },\r\n    { id: 3, name: 'Edyta Leśniewska', position: 'Head of Human Resources', location: 'Warsaw', avatar: 'images/avatars/av03.png', email: 'edyta@team.com' },\r\n    { id: 4, name: 'Joanna Pawluk', position: 'Chief Groth Officer (CGO)', location: 'London', avatar: 'images/avatars/av05.png', email: 'joanna@team.com' },\r\n    { id: 5, name: 'David Saunders', position: 'Buisness Development', location: 'London', avatar: 'images/avatars/av04.png', email: 'david@team.com' },\r\n    { id: 6, name: 'Adam Eldridge', position: 'Buisness Development Director US', location: 'Los Angeles', avatar: 'images/avatars/av04.png', email: 'adam@team.com' },\r\n    { id: 7, name: 'Maha Mahda', position: 'Chief Buisness Development Officer (CBDO)', location: 'Warsaw', avatar: 'images/avatars/av01.png', email: 'maha@team.com' },\r\n    { id: 8, name: 'Elżbieta Kamińska', position: 'International Client Service Manager', location: 'Szczecin', avatar: 'images/avatars/av03.png', email: 'ela@team.com' },\r\n    { id: 9, name: 'Marek Koniarek', position: 'Creation Manager', location: 'Łódź', avatar: 'images/avatars/av04.png', email: 'marek@team.com' },\r\n    { id: 10, name: 'Kamil Bolek', position: 'Head of Communication', location: 'Krakow', avatar: 'images/avatars/av02.png', email: 'kamil@team.com' }\r\n])","import React from 'react';\r\n\r\nconst mail = props => {\r\n\treturn (\r\n\t\t<a className=\"mail\" href={\"mailto:\" + props.mail}>\r\n\t\t\t<img src=\"/images/mail.png\" alt=\"\" />\r\n\t\t</a>\r\n\t)\r\n}\r\n\r\nexport default mail;","import React from 'react';\r\nimport Mail from './Mail';\r\n\r\nconst member = (props) => {\r\n\treturn (\r\n\t\t<div className=\"member\" onClick={props.click}>\r\n\t\t\t<div className=\"member__avatar\">\r\n\t\t\t\t<img className=\"avatar\" src={props.avatar} alt=\"\" />\r\n\t\t\t\t<Mail mail={props.email} />\r\n\t\t\t\t<div className=\"overlay\"></div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"member__content\">\r\n\t\t\t\t<h3 className=\"name\">{props.name}</h3>\r\n\t\t\t\t<h5 className=\"position\">{props.position}</h5>\r\n\t\t\t\t<h5 className=\"location\">{props.location}</h5>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default member;","import React from 'react';\r\nimport Container from '../Container/container';\r\nimport membersList from '../../static/team';\r\nimport Member from './Member';\r\n\r\nconst Members = (props) => {\r\n\r\n\tconst showAllMembers = member => {\r\n\t\tconst { id, name, position, location, email, avatar } = member;\r\n\r\n\t\treturn <Member\r\n\t\t\tname={name}\r\n\t\t\tposition={position}\r\n\t\t\tlocation={location}\r\n\t\t\t// avatar={\"http://lorempixel.com/g/400/400/people/\" + Math.floor(Math.random() * 10)}\r\n\t\t\tavatar={avatar}\r\n\t\t\tkey={id}\r\n\t\t\temail={email}\r\n\t\t\tclick={() => props.sliderToggle(id)}\r\n\t\t/>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<section className=\"OurTeam\">\r\n\t\t\t<Container>\r\n\t\t\t\t<h2 className=\"OurTeam__title\">Meet our team</h2>\r\n\t\t\t\t<div className=\"OurTeam__members\">\r\n\t\t\t\t\t{membersList.map(showAllMembers)}\r\n\t\t\t\t</div>\r\n\t\t\t</Container>\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\nexport default Members\r\n","import React from \"react\";\r\n\r\nconst slide = props => {\r\n    return (\r\n        <div className=\"swiper-slide\">\r\n            <h4 className=\"position\">{props.position}</h4>\r\n            <h2 className=\"name\">{props.name}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default slide;","import React from 'react';\r\nimport Slider from \"react-slick\";\r\nimport Container from '../Container/container';\r\nimport membersList from '../../static/team';\r\nimport Slide from \"./slide\";\r\nimport { fadeIn } from 'react-animations';\r\nimport Radium, { StyleRoot } from 'radium';\r\n\r\nconst styles = {\r\n\tfadeIn: {\r\n\t\tanimation: 'x 0.6s',\r\n\t\tanimationName: Radium.keyframes(fadeIn, 'fadeIn')\r\n\t}\r\n}\r\n\r\nconst MembersSlider = props => {\r\n\r\n\tconst settings = {\r\n\t\tdots: false,\r\n\t\tinfinite: true,\r\n\t\tspeed: 500,\r\n\t\tslidesToShow: 1,\r\n\t\tslidesToScroll: 1,\r\n\t\tinitialSlide: props.slideInitial,\r\n\t\tarrows: true\r\n\t}\r\n\r\n\tconst showAllSlides = slide => {\r\n\t\tconst { id, name, position } = slide;\r\n\t\treturn <Slide key={id} name={name} position={position} />\r\n\t}\r\n\r\n\tconst changeSlide = (element) => document.querySelector(element).click()\r\n\r\n\treturn (\r\n\t\t<StyleRoot>\r\n\t\t\t<div className=\"Slider\" style={styles.fadeIn}>\r\n\t\t\t\t<div onClick={() => props.sliderToggle('close')} className=\"Slider__close\">\r\n\t\t\t\t\t<img src=\"images/close.png\" alt=\"\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<div className=\"Slider__arrow Slider__arrow--left\" onClick={() => changeSlide('.slick-prev')}>\r\n\t\t\t\t\t\t<img src=\"images/angle-left.png\" alt=\"\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Slider {...settings}>\r\n\t\t\t\t\t\t{membersList.map(showAllSlides)}\r\n\t\t\t\t\t</Slider>\r\n\t\t\t\t\t<div className=\"Slider__arrow Slider__arrow--right\" onClick={() => changeSlide('.slick-next')}>\r\n\t\t\t\t\t\t<img src=\"images/angle-right.png\" alt=\"\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t</StyleRoot>\r\n\t)\r\n}\r\n\r\nexport default MembersSlider;","import React, { Component } from 'react';\r\nimport Members from './components/Members/Members';\r\nimport Slider from './components/Slider/Slider';\r\nimport './App.scss';\r\n\r\nclass OurTeam extends Component {\r\n\tstate = {\r\n\t\tisSlider: false,\r\n\t\tslideInitial: 0\r\n\t}\r\n\r\n\tsliderHandler = (element) => {\r\n\t\tconst sliderStatus = this.state.isSlider;\r\n\t\telement !== 'close' ? this.setState({ isSlider: !sliderStatus, slideInitial: element - 1 }) : this.setState({ isSlider: !sliderStatus });\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet mainView = (\r\n\t\t\t!this.state.isSlider ? <Members sliderToggle={this.sliderHandler} /> : <Slider slideInitial={this.state.slideInitial} sliderToggle={this.sliderHandler} />\r\n\t\t)\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{mainView}\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default OurTeam;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}